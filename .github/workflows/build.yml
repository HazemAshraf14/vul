name: CI/CD Pipeline
on:
  workflow_dispatch:
  # this will trigger workflow whenever a change is pushed to main branch
  push:
    branches:
      - main
jobs:
  
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.7.x]

    steps:
    - uses: actions/checkout@v1
    
    - name: Cache node modules
      uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Node ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    # - name: Installing NPM
    #   run: npm install

    # - name: Building application
    #   run: npm run build

    - name: Create SBOM step
      uses: CycloneDX/gh-node-module-generatebom@v1
      with:
        path: './'
        output: './bom_directory/test.app.bom.xml'

    # - name: Install zip
    #   uses: montudor/action-zip@v1

    # - name: Zip output
    #   run: zip -qq -r deploy.zip dist Dockerfile Dockerrun.aws.json custom-nginx-file.conf
    #   working-directory: output

    # - name: Upload zip file
    #   # We upload so we can re-use same jar in next job.
    #   uses: actions/upload-artifact@v2
    #   with:
    #     #Name of artifact can be anything
    #     name: artifact
    #     #Relative path to jar file
    #     path: ./output/deploy.zip
      
  # sonarcloud:
  #   needs: build
  #   name: SonarCloud
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
  #     - name: SonarCloud Scan
  #       uses: SonarSource/sonarcloud-github-action@master
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # deploy:
  #   needs: sonarcloud
  #   name: Deploy to Elastic Beanstalk
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Download zip file
  #       #Download the artifact which was uploaded in the Build Archive's job
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: artifact

  #     - name: Get timestamp
  #       uses: gerred/actions/current-time@master
  #       id: current-time

  #     - name: Run string replace
  #       uses: frabert/replace-string-action@master
  #       id: format-time
  #       with:
  #         pattern: '[:\.]+'
  #         string: "${{ steps.current-time.outputs.time }}"
  #         replace-with: '-'
  #         flags: 'g'

  #     - name: Beanstalk Deploy for app
  #       uses: einaregilsson/beanstalk-deploy@v13
  #       with:
  #         aws_access_key: ${{secrets.AWS_ACCESS_KEY_ID}}
  #         aws_secret_key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
  #         application_name: eb-angular-github-cicd
  #         environment_name: Ebangulargithubcicd-env
  #         region: us-west-2
  #         version_label: "my-app-${{ steps.format-time.outputs.replaced }}"
  #         deployment_package: deploy.zip

  #     - name: Deployed!
  #       run: echo App deployed to ELB
